name: Package with PyInstaller
run-name: ${{ github.actor }} is compiling ${{ github.ref_name }}
on: [push]
jobs:
  package:
    name: Packaging on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        os: [linux, windows, macos]
        include:
          - os: linux
            runner: ubuntu-latest
            python_cmd: python3.11
            zip_name: linux
            activate_cmd: source .venv/bin/activate
          - os: windows
            runner: windows-latest
            python_cmd: python
            zip_name: windows
            activate_cmd: .venv\Scripts\Activate.ps1
          - os: macos
            runner: macOS-latest
            python_cmd: python3.11
            zip_name: macos
            activate_cmd: source .venv/bin/activate
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python - -y

      - name: Update PATH
        if: ${{ matrix.os != 'windows' }}
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update PATH for Windows
        if: ${{ matrix.os == 'windows' }}
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: 3.11
          cache: poetry

      - name: Install dependencies
        run:  install --with actions

      - name: Run PyInstaller
        run: poetry run pyinstaller -n test-actions test_actions/__main__.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ matrix.zip_name }}
          path: dist
