name: Package with PyInstaller
run-name: ${{ github.actor }} is compiling ${{ github.ref_name }}
on: [push]
jobs:
  package:
    name: Packaging on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            python_cmd: python3.11
            zip_name: linux
            activate_cmd: source .venv/bin/activate
          - os: windows-latest
            python_cmd: python
            zip_name: windows
            activate_cmd: .venv\Scripts\Activate.ps1
          - os: macOS-latest
            python_cmd: python3.11
            zip_name: macos
            activate_cmd: source .venv/bin/activate
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry==1.7.1
      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: 3.11
          cache: poetry
      - name: Run PyInstaller in venv
        run: |
          ${{ matrix.python_cmd }} -m venv .venv
          ${{ matrix.activate_cmd }}
          poetry install --with dev
          pyinstaller -n test-actions test_actions/__main__.py
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ matrix.zip_name }}
          path: dist
